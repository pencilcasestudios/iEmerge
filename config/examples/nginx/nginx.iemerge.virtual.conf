# HTTP
server {
	listen 80;
	server_name	iemerge.virtual
			*.iemerge.virtual
			;

	# Redirect 'www' to non-www
	# Ref: http://b.lesseverything.com/2008/4/9/redirect-from-www-to-non-www-using-nginx
	if ($host = 'www.iemerge.virtual' ) {
		rewrite  ^/(.*)$  http://iemerge.virtual/$1  permanent;
	}

	# Ref: http://guides.rubyonrails.org/asset_pipeline.html
	location ~ ^/assets/ {
		expires 1y;
		add_header Cache-Control public;

		add_header ETag "";
		break;
	}

	# Ref: http://guides.rubyonrails.org/asset_pipeline.html
	location ~ ^/(assets)/  {
		root /var/Apps/iEmerge/virtual/current/public;
		gzip_static on; # to serve pre-gzipped version
		expires max;
		add_header Cache-Control public;
	}

	root /var/Apps/iEmerge/virtual/current/public;

	passenger_enabled on;
	passenger_ruby /home/deploy/.rvm/gems/ruby-2.2.0/wrappers/ruby;

	access_log /var/log/nginx/http.iemerge.virtual.access.log;
	error_log /var/log/nginx/http.iemerge.virtual.error.log;
}


# HTTPS
server {
	listen 443;
	server_name	iemerge.virtual
			*.iemerge.virtual
			;

	# Redirect 'www' to non-www
	# Ref: http://b.lesseverything.com/2008/4/9/redirect-from-www-to-non-www-using-nginx
	if ($host = 'www.iemerge.virtual' ) {
		rewrite  ^/(.*)$  https://iemerge.virtual/$1  permanent;
	}

	# Ref: http://guides.rubyonrails.org/asset_pipeline.html
	location ~ ^/assets/ {
		expires 1y;
		add_header Cache-Control public;

		add_header ETag "";
		break;
	}

	# Ref: http://guides.rubyonrails.org/asset_pipeline.html
	location ~ ^/(assets)/  {
		root /var/Apps/iEmerge/virtual/current/public;
		gzip_static on; # to serve pre-gzipped version
		expires max;
		add_header Cache-Control public;
	}

	ssl on;
	ssl_certificate /etc/nginx/ssl/iEmerge/iemerge.virtual.crt;
	ssl_certificate_key /etc/nginx/ssl/iEmerge/iemerge.virtual.key;

	root /var/Apps/iEmerge/virtual/current/public;

	passenger_enabled on;
	passenger_ruby /home/deploy/.rvm/gems/ruby-2.2.0/wrappers/ruby;

	access_log /var/log/nginx/https.iemerge.virtual.access.log;
	error_log /var/log/nginx/https.iemerge.virtual.error.log;
}
